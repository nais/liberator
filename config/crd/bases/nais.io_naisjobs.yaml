
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: naisjobs.nais.io
spec:
  group: nais.io
  names:
    kind: Naisjob
    listKind: NaisjobList
    plural: naisjobs
    shortNames:
    - nj
    singular: naisjob
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.schedule
      name: Schedule
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .metadata.labels.team
      name: Team
      type: string
    - jsonPath: .status.synchronizationState
      name: State
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Naisjob defines a NAIS Naisjob.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NaisjobSpec contains the NAIS manifest. Please keep this
              list sorted for clarity.
            properties:
              accessPolicy:
                description: By default, no traffic is allowed between naisjobs inside
                  the cluster. Configure access policies to explicitly allow communication
                  between naisjobs. This is also used for granting inbound access
                  in the context of Azure AD and TokenX clients.
                properties:
                  inbound:
                    description: Configures inbound access for your application.
                    properties:
                      rules:
                        description: List of NAIS applications that may access your
                          application. These settings apply both to Zero Trust network
                          connectivity and token validity for Azure AD and TokenX
                          tokens.
                        items:
                          properties:
                            application:
                              description: The application's name.
                              type: string
                            cluster:
                              description: The application's cluster. May be omitted
                                if it should be in the same cluster as your application.
                              type: string
                            namespace:
                              description: The application's namespace. May be omitted
                                if it should be in the same namespace as your application.
                              type: string
                            permissions:
                              description: Permissions contains a set of permissions
                                that are granted to the given application. Currently
                                only applicable for Azure AD clients.
                              properties:
                                roles:
                                  description: Roles is a set of custom permission
                                    roles that are granted to a given application.
                                  items:
                                    pattern: ^[a-z0-9-_./]+$
                                    type: string
                                  type: array
                                scopes:
                                  description: Scopes is a set of custom permission
                                    scopes that are granted to a given application.
                                  items:
                                    pattern: ^[a-z0-9-_./]+$
                                    type: string
                                  type: array
                              type: object
                          required:
                          - application
                          type: object
                        type: array
                    required:
                    - rules
                    type: object
                  outbound:
                    description: Configures outbound access for your application.
                    properties:
                      external:
                        description: List of external resources that your applications
                          should be able to reach.
                        items:
                          properties:
                            host:
                              description: The _host_ that your application should
                                be able to reach, i.e. without the protocol (e.g.
                                `https://`).
                              type: string
                            ports:
                              description: List of port rules for external communication.
                                Must be specified if using protocols other than HTTPS.
                              items:
                                properties:
                                  name:
                                    description: Human-readable identifier for this
                                      rule.
                                    type: string
                                  port:
                                    description: The port used for communication.
                                    format: int32
                                    type: integer
                                  protocol:
                                    description: The protocol used for communication.
                                    enum:
                                    - HTTP
                                    - HTTPS
                                    - GRPC
                                    - HTTP2
                                    - MONGO
                                    - TCP
                                    - TLS
                                    type: string
                                required:
                                - name
                                - port
                                - protocol
                                type: object
                              type: array
                          required:
                          - host
                          type: object
                        type: array
                      rules:
                        description: List of NAIS applications that your application
                          needs to access. These settings apply to Zero Trust network
                          connectivity.
                        items:
                          properties:
                            application:
                              description: The application's name.
                              type: string
                            cluster:
                              description: The application's cluster. May be omitted
                                if it should be in the same cluster as your application.
                              type: string
                            namespace:
                              description: The application's namespace. May be omitted
                                if it should be in the same namespace as your application.
                              type: string
                          required:
                          - application
                          type: object
                        type: array
                    type: object
                type: object
              activeDeadlineSeconds:
                description: 'Once a Naisjob reaches activeDeadlineSeconds, all of
                  its running Pods are terminated and the Naisjob status will become
                  type: Failed with reason: DeadlineExceeded. If set, this takes presedence
                  over BackoffLimit.'
                format: int64
                type: integer
              azure:
                description: Provisions and configures Azure resources.
                properties:
                  application:
                    description: Configures an Azure AD client for this application.
                    properties:
                      allowAllUsers:
                        description: AllowAllUsers denotes whether or not all users
                          within the tenant should be allowed to access this AzureAdApplication.
                          If undefined will default to `true` when Spec.Claims.Groups
                          is undefined, and `false` if Spec.Claims.Groups is defined.
                        type: boolean
                      claims:
                        description: Claims defines additional configuration of the
                          emitted claims in tokens returned to the Azure AD application.
                        properties:
                          extra:
                            description: Extra is a list of additional claims to be
                              mapped from an associated claim-mapping policy. Currently,
                              the only supported values are `NAVident` and `azp_name`.
                            items:
                              enum:
                              - NAVident
                              - azp_name
                              type: string
                            type: array
                          groups:
                            description: Groups is a list of Azure AD group IDs to
                              be emitted in the `groups` claim in tokens issued by
                              Azure AD. This also restricts access to only members
                              of the defined groups unless overridden by `allowAllUsers`.
                            items:
                              properties:
                                id:
                                  description: ID is the actual `object ID` associated
                                    with the given group in Azure AD.
                                  type: string
                              type: object
                            type: array
                        type: object
                      enabled:
                        description: Whether to enable provisioning of an Azure AD
                          application. If enabled, an Azure AD application will be
                          provisioned.
                        type: boolean
                      replyURLs:
                        description: ReplyURLs is a list of allowed redirect URLs
                          used when performing OpenID Connect flows for authenticating
                          end-users.
                        items:
                          pattern: ^https?:\/\/.+$
                          type: string
                        type: array
                      singlePageApplication:
                        description: SinglePageApplication denotes whether or not
                          this Azure AD application should be registered as a single-page-application
                          for usage in client-side applications without access to
                          secrets.
                        type: boolean
                      tenant:
                        description: "A Tenant represents an organization in Azure
                          AD. \n If unspecified, will default to `trygdeetaten.no`
                          for development clusters and `nav.no` for production clusters."
                        enum:
                        - nav.no
                        - trygdeetaten.no
                        type: string
                    required:
                    - enabled
                    type: object
                required:
                - application
                type: object
              backoffLimit:
                description: Specify the number of retries before considering a Naisjob
                  as failed
                format: int32
                type: integer
              command:
                description: Override command when starting Docker image.
                items:
                  type: string
                type: array
              completions:
                description: A Job tracks the successful completions. When a specified
                  number of successful completions is reached, the task (ie, Job)
                  is complete.
                format: int32
                type: integer
              concurrencyPolicy:
                description: Specifies how to treat concurrent executions of a job
                  that is created by this Naisjob-cron.
                enum:
                - Forbid
                - Replace
                - Allow
                type: string
              env:
                description: Custom environment variables injected into your container.
                  Specify either `value` or `valueFrom`, but not both.
                items:
                  properties:
                    name:
                      description: Environment variable name. May only contain letters,
                        digits, and the underscore `_` character.
                      type: string
                    value:
                      description: Environment variable value. Numbers and boolean
                        values must be quoted. Required unless `valueFrom` is specified.
                      type: string
                    valueFrom:
                      description: Dynamically set environment variables based on
                        fields found in the Pod spec.
                      properties:
                        fieldRef:
                          properties:
                            fieldPath:
                              description: Field value from the `Pod` spec that should
                                be copied into the environment variable.
                              enum:
                              - ""
                              - metadata.name
                              - metadata.namespace
                              - metadata.labels
                              - metadata.annotations
                              - spec.nodeName
                              - spec.serviceAccountName
                              - status.hostIP
                              - status.podIP
                              type: string
                          required:
                          - fieldPath
                          type: object
                      required:
                      - fieldRef
                      type: object
                  required:
                  - name
                  type: object
                type: array
              envFrom:
                description: "EnvFrom exposes all variables in the ConfigMap or Secret
                  resources as environment variables. One of `configMap` or `secret`
                  is required. \n Environment variables will take the form `KEY=VALUE`,
                  where `key` is the ConfigMap or Secret key. You can specify as many
                  keys as you like in a single ConfigMap or Secret. \n The ConfigMap
                  and Secret resources must live in the same Kubernetes namespace
                  as the Naisjob resource."
                items:
                  properties:
                    configmap:
                      description: Name of the `ConfigMap` where environment variables
                        are specified. Required unless `secret` is set.
                      type: string
                    secret:
                      description: Name of the `Secret` where environment variables
                        are specified. Required unless `configMap` is set.
                      type: string
                  type: object
                type: array
              failedJobsHistoryLimit:
                description: Specify how many failed Jobs should be kept.
                format: int32
                type: integer
              filesFrom:
                description: "List of ConfigMap or Secret resources that will have
                  their contents mounted into the containers as files. Either `configMap`
                  or `secret` is required. \n Files will take the path `<mountPath>/<key>`,
                  where `key` is the ConfigMap or Secret key. You can specify as many
                  keys as you like in a single ConfigMap or Secret, and they will
                  all be mounted to the same directory. \n The ConfigMap and Secret
                  resources must live in the same Kubernetes namespace as the Naisjob
                  resource."
                items:
                  properties:
                    configmap:
                      description: Name of the `ConfigMap` that contains files that
                        should be mounted into the container. Required unless `secret`
                        or `persistentVolumeClaim` is set.
                      type: string
                    mountPath:
                      description: "Filesystem path inside the pod where files are
                        mounted. The directory will be created if it does not exist.
                        If the directory exists, any files in the directory will be
                        made unaccessible. \n Defaults to `/var/run/configmaps/<NAME>`,
                        `/var/run/secrets`, or `/var/run/pvc/<NAME>`, depending on
                        which of them is specified."
                      type: string
                    persistentVolumeClaim:
                      description: Name of the `PersistentVolumeClaim` that should
                        be mounted into the container. Required unless `configMap`
                        or `secret` is set. This feature requires coordination with
                        the NAIS team.
                      type: string
                    secret:
                      description: Name of the `Secret` that contains files that should
                        be mounted into the container. Required unless `configMap`
                        or `persistentVolumeClaim` is set. If mounting multiple secrets,
                        `mountPath` *MUST* be set to avoid collisions.
                      type: string
                  type: object
                type: array
              gcp:
                properties:
                  bigQueryDatasets:
                    description: Provision BigQuery datasets and give your application's
                      pod mountable secrets for connecting to each dataset. Datasets
                      are immutable and cannot be changed.
                    items:
                      properties:
                        cascadingDelete:
                          description: 'When set to true will delete the dataset,
                            when the application resource is deleted. NB: If no tables
                            exist in the bigquery dataset, it _will_ delete the dataset
                            even if this value is set/defaulted to `false`. Default
                            value is `false`.'
                          type: boolean
                        description:
                          description: Human-readable description of what this BigQuery
                            dataset contains, or is used for. Will be visible in the
                            GCP Console.
                          type: string
                        name:
                          description: Name of the BigQuery Dataset. The canonical
                            name of the dataset will be `<TEAM_PROJECT_ID>:<NAME>`.
                          pattern: ^[a-z0-9][a-z0-9_]+$
                          type: string
                        permission:
                          description: Permission level given to application.
                          enum:
                          - READ
                          - READWRITE
                          type: string
                      required:
                      - name
                      - permission
                      type: object
                    type: array
                  buckets:
                    description: Provision cloud storage buckets and connect them
                      to your application.
                    items:
                      properties:
                        cascadingDelete:
                          description: Allows deletion of bucket. Set to true if you
                            want to delete the bucket.
                          type: boolean
                        lifecycleCondition:
                          description: Conditions for the bucket to use when selecting
                            objects to delete in cleanup.
                          properties:
                            age:
                              description: Condition is satisfied when the object
                                reaches the specified age in days. These will be deleted.
                              type: integer
                            createdBefore:
                              description: Condition is satisfied when the object
                                is created before midnight on the specified date.
                                These will be deleted.
                              type: string
                            numNewerVersions:
                              description: Condition is satisfied when the object
                                has the specified number of newer versions. The older
                                versions will be deleted.
                              type: integer
                            withState:
                              description: Condition is satisfied when the object
                                has the specified state.
                              enum:
                              - ""
                              - LIVE
                              - ARCHIVED
                              - ANY
                              type: string
                          type: object
                        name:
                          description: The name of the bucket
                          type: string
                        publicAccessPrevention:
                          description: Public access prevention allows you to prevent
                            public access to your bucket.
                          type: boolean
                        retentionPeriodDays:
                          description: The number of days to hold objects in the bucket
                            before it is allowed to delete them.
                          maximum: 36500
                          minimum: 1
                          type: integer
                        uniformBucketLevelAccess:
                          description: "Allows you to uniformly control access to
                            your Cloud Storage resources. When you enable uniform
                            bucket-level access on a bucket, Access Control Lists
                            (ACLs) are disabled, and only bucket-level Identity and
                            Access Management (IAM) permissions grant access to that
                            bucket and the objects it contains. \n Uniform access
                            control can not be reversed after 90 days! This is controlled
                            by Google."
                          type: boolean
                      required:
                      - name
                      type: object
                    type: array
                  permissions:
                    description: List of _additional_ permissions that should be granted
                      to your application for accessing external GCP resources that
                      have not been provisioned through NAIS.
                    items:
                      properties:
                        resource:
                          description: IAM resource to bind the role to.
                          properties:
                            apiVersion:
                              description: Kubernetes _APIVersion_.
                              type: string
                            kind:
                              description: Kubernetes _Kind_.
                              type: string
                            name:
                              description: Kubernetes _Name_.
                              type: string
                          required:
                          - apiVersion
                          - kind
                          type: object
                        role:
                          description: Name of the GCP role to bind the resource to.
                          type: string
                      required:
                      - resource
                      - role
                      type: object
                    type: array
                  sqlInstances:
                    description: Provision database instances and connect them to
                      your application.
                    items:
                      properties:
                        autoBackupHour:
                          description: If specified, run automatic backups of the
                            SQL database at the given hour. Note that this will backup
                            the whole SQL instance, and not separate databases. Restores
                            are done using the Google Cloud Console.
                          maximum: 23
                          minimum: 0
                          type: integer
                        cascadingDelete:
                          description: Remove the entire Postgres server including
                            all data when the Kubernetes resource is deleted. *THIS
                            IS A DESTRUCTIVE OPERATION*! Set cascading delete only
                            when you want to remove data forever.
                          type: boolean
                        collation:
                          description: Sort order for `ORDER BY ...` clauses.
                          type: string
                        databases:
                          description: List of databases that should be created on
                            this Postgres server.
                          items:
                            properties:
                              envVarPrefix:
                                description: Prefix to add to environment variables
                                  made available for database connection. If switching
                                  to `EnvVarPrefix` you need to [reset database credentials](https://docs.nais.io/persistence/postgres/#reset-database-credentials).
                                type: string
                              name:
                                description: Database name.
                                type: string
                              users:
                                description: Add extra users for database access.
                                  These users need to be manually given access to
                                  database tables.
                                items:
                                  properties:
                                    name:
                                      description: User name.
                                      pattern: ^[_a-zA-Z][-_a-zA-Z0-9]+$
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - name
                            type: object
                          type: array
                        diskAutoresize:
                          description: When set to true, GCP will automatically increase
                            storage by XXX for the database when disk usage is above
                            the high water mark. Setting this field to true also disables
                            manual control over disk size, i.e. the `diskSize` parameter
                            will be ignored.
                          type: boolean
                        diskSize:
                          description: How much hard drive space to allocate for the
                            SQL server, in gigabytes. This parameter is used when
                            first provisioning a server. Disk size can be changed
                            using this field _only when diskAutoresize is set to false_.
                          minimum: 10
                          type: integer
                        diskType:
                          description: Disk type to use for storage in the database.
                          enum:
                          - SSD
                          - HDD
                          type: string
                        flags:
                          description: Set flags to control the behavior of the instance.
                            Be aware that NAIS _does not validate_ these flags, so
                            take extra care to make sure the values match against
                            the specification, otherwise your deployment will seemingly
                            work OK, but the database flags will not function as expected.
                          items:
                            properties:
                              name:
                                description: Name of the flag.
                                type: string
                              value:
                                description: Value of the flag.
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        highAvailability:
                          description: When set to true this will set up standby database
                            for failover.
                          type: boolean
                        insights:
                          description: Configures query insights which are now default
                            for new sql instances.
                          properties:
                            enabled:
                              description: True if Query Insights feature is enabled.
                              type: boolean
                            queryStringLength:
                              description: Maximum query length stored in bytes. Between
                                256 and 4500. Default to 1024.
                              maximum: 4500
                              minimum: 256
                              type: integer
                            recordApplicationTags:
                              description: True if Query Insights will record application
                                tags from query when enabled.
                              type: boolean
                            recordClientAddress:
                              description: True if Query Insights will record client
                                address when enabled.
                              type: boolean
                          type: object
                        maintenance:
                          description: Desired maintenance window for database updates.
                          properties:
                            day:
                              maximum: 7
                              minimum: 1
                              type: integer
                            hour:
                              maximum: 23
                              minimum: 0
                              type: integer
                          type: object
                        name:
                          description: The name of the instance, if omitted the application
                            name will be used.
                          type: string
                        pointInTimeRecovery:
                          description: Enables point-in-time recovery for sql instances
                            using write-ahead logs.
                          type: boolean
                        retainedBackups:
                          description: Number of daily backups to retain. Defaults
                            to 7 backups.
                          maximum: 365
                          minimum: 1
                          type: integer
                        tier:
                          description: Server tier, i.e. how much CPU and memory allocated.
                            Available tiers are `db-f1-micro`, `db-g1-small` and custom
                            `db-custom-CPU-RAM`. Custom memory must be mulitple of
                            256 MB and at least 3.75 GB (e.g. `db-custom-1-3840` for
                            1 cpu, 3840 MB ram) Also check out [sizing your database](../../persistence/postgres/#sizing-your-database).
                          pattern: db-.+
                          type: string
                        type:
                          description: PostgreSQL version.
                          enum:
                          - POSTGRES_11
                          - POSTGRES_12
                          - POSTGRES_13
                          - POSTGRES_14
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                type: object
              image:
                description: Your Naisjob's Docker image location and tag.
                type: string
              influx:
                description: An Influxdb via Aiven. A typical use case is to store
                  metrics from your application and visualize them in Grafana. See
                  [navikt/aiven-iac](https://github.com/navikt/aiven-iac) repository
                properties:
                  instance:
                    description: 'Provisions an InfluxDB instance and configures your
                      application to access it. Use the prefix: `influx-` + `team`
                      that you specified in the [navikt/aiven-iac](https://github.com/navikt/aiven-iac)
                      repository.'
                    type: string
                required:
                - instance
                type: object
              kafka:
                description: Enable Aiven Kafka for your Naisjob.
                properties:
                  pool:
                    description: Configures your application to access an Aiven Kafka
                      cluster.
                    type: string
                  streams:
                    description: Allow this app to use kafka streams
                    type: boolean
                required:
                - pool
                type: object
              liveness:
                description: Many Naisjobs running for long periods of time eventually
                  transition to broken states, and cannot recover except by being
                  restarted. Kubernetes provides liveness probes to detect and remedy
                  such situations. Read more about this over at the [Kubernetes probes
                  documentation](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/).
                properties:
                  failureThreshold:
                    description: When a Pod starts, and the probe fails, Kubernetes
                      will try _failureThreshold_ times before giving up. Giving up
                      in case of a startup probe means restarting the Pod.
                    type: integer
                  initialDelay:
                    description: Number of seconds after the container has started
                      before startup probes are initiated.
                    type: integer
                  path:
                    description: HTTP endpoint path that signals 200 OK if the application
                      has started successfully.
                    type: string
                  periodSeconds:
                    description: How often (in seconds) to perform the probe.
                    type: integer
                  port:
                    description: Port for the startup probe.
                    type: integer
                  timeout:
                    description: Number of seconds after which the probe times out.
                    type: integer
                required:
                - path
                type: object
              logformat:
                description: Format of the logs from the container. Use this if the
                  container doesn't support JSON logging and the log is in a special
                  format that need to be parsed.
                enum:
                - ""
                - accesslog
                - accesslog_with_processing_time
                - accesslog_with_referer_useragent
                - capnslog
                - logrus
                - gokit
                - redis
                - glog
                - simple
                - influxdb
                - log15
                type: string
              logtransform:
                description: Extra filters for modifying log content. This can e.g.
                  be used for setting loglevel based on http status code.
                enum:
                - http_loglevel
                - dns_loglevel
                type: string
              maskinporten:
                description: Configures a Maskinporten client for this Naisjob. See
                  [Maskinporten](https://doc.nais.io/security/auth/maskinporten/)
                  for more details.
                properties:
                  enabled:
                    description: If enabled, provisions and configures a Maskinporten
                      client with consumed scopes and/or Exposed scopes with DigDir.
                    type: boolean
                  scopes:
                    description: Schema to configure Maskinporten clients with consumed
                      scopes and/or exposed scopes.
                    properties:
                      consumes:
                        description: This is the Schema for the consumes and exposes
                          API. `consumes` is a list of scopes that your client can
                          request access to.
                        items:
                          properties:
                            name:
                              description: The scope consumed by the application to
                                gain access to an external organization API. Ensure
                                that the NAV organization has been granted access
                                to the scope prior to requesting access.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      exposes:
                        description: '`exposes` is a list of scopes your application
                          want to expose to other organization where access to the
                          scope is based on organization number.'
                        items:
                          properties:
                            allowedIntegrations:
                              description: Whitelisting of integration's allowed.
                                Default is `maskinporten`
                              items:
                                type: string
                              minItems: 1
                              type: array
                            atMaxAge:
                              description: Max time in seconds for a issued access_token.
                                Default is `30` sec.
                              maximum: 680
                              minimum: 30
                              type: integer
                            consumers:
                              description: External consumers granted access to this
                                scope and able to request access_token.
                              items:
                                properties:
                                  name:
                                    description: This is a describing field intended
                                      for clarity not used for any other purpose.
                                    type: string
                                  orgno:
                                    description: The external business/organization
                                      number.
                                    pattern: ^\d{9}$
                                    type: string
                                required:
                                - orgno
                                type: object
                              type: array
                            enabled:
                              description: If Enabled the configured scope is available
                                to be used and consumed by organizations granted access.
                              type: boolean
                            name:
                              description: The actual subscope combined with `Product`.
                                Ensure that `<Product><Name>` matches `Pattern`.
                              pattern: ^([a-zæøå0-9]+\/?)+(\:[a-zæøå0-9]+)*[a-zæøå0-9]+(\.[a-zæøå0-9]+)*$
                              type: string
                            product:
                              description: The product-area your application belongs
                                to e.g. arbeid, helse ... This will be included in
                                the final scope `nav:<Product><Name>`.
                              pattern: ^[a-z0-9]+$
                              type: string
                          required:
                          - enabled
                          - name
                          - product
                          type: object
                        type: array
                    type: object
                required:
                - enabled
                type: object
              openSearch:
                description: To get your own OpenSearch instance head over to the
                  IaC-repo to provision each instance. See [navikt/aiven-iac](https://github.com/navikt/aiven-iac)
                  repository.
                properties:
                  access:
                    description: Access level for OpenSearch user
                    enum:
                    - read
                    - write
                    - readwrite
                    - admin
                    type: string
                  instance:
                    description: Configure your application to access your OpenSearch
                      instance. Use the `instance_name` that you specified in the
                      [navikt/aiven-iac](https://github.com/navikt/aiven-iac) repository.
                    type: string
                required:
                - instance
                type: object
              parallelism:
                description: For running pods in parallel. If it is specified as 0,
                  then the Job is effectively paused until it is increased.
                format: int32
                type: integer
              preStopHook:
                description: PreStopHook is called immediately before a container
                  is terminated due to an API request or management event such as
                  liveness/startup probe failure, preemption, resource contention,
                  etc. The handler is not called if the container crashes or exits
                  by itself. The reason for termination is passed to the handler.
                properties:
                  exec:
                    description: Command that should be run inside the main container
                      just before the pod is shut down by Kubernetes.
                    properties:
                      command:
                        description: "Command is the command line to execute inside
                          the container before the pod is shut down. The command is
                          not run inside a shell, so traditional shell instructions
                          (pipes, redirects, etc.) won't work. To use a shell, you
                          need to explicitly call out to that shell. \n If the exit
                          status is non-zero, the pod will still be shut down, and
                          marked as `Failed`."
                        items:
                          type: string
                        type: array
                    type: object
                  http:
                    description: HTTP GET request that is called just before the pod
                      is shut down by Kubernetes.
                    properties:
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        description: Port to access on the container. Defaults to
                          application port, as defined in `.spec.port`.
                        maximum: 65535
                        minimum: 1
                        type: integer
                    required:
                    - path
                    type: object
                type: object
              readiness:
                description: Sometimes, Naisjobs are temporarily unable to serve traffic.
                  For example, an Naisjob might need to load large data or configuration
                  files during startup, or depend on external services after startup.
                  In such cases, you don't want to kill the Naisjob, but you don’t
                  want to send it requests either. Kubernetes provides readiness probes
                  to detect and mitigate these situations. A pod with containers reporting
                  that they are not ready does not receive traffic through Kubernetes
                  Services. Read more about this over at the [Kubernetes readiness
                  documentation](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/).
                properties:
                  failureThreshold:
                    description: When a Pod starts, and the probe fails, Kubernetes
                      will try _failureThreshold_ times before giving up. Giving up
                      in case of a startup probe means restarting the Pod.
                    type: integer
                  initialDelay:
                    description: Number of seconds after the container has started
                      before startup probes are initiated.
                    type: integer
                  path:
                    description: HTTP endpoint path that signals 200 OK if the application
                      has started successfully.
                    type: string
                  periodSeconds:
                    description: How often (in seconds) to perform the probe.
                    type: integer
                  port:
                    description: Port for the startup probe.
                    type: integer
                  timeout:
                    description: Number of seconds after which the probe times out.
                    type: integer
                required:
                - path
                type: object
              resources:
                description: When Containers have [resource requests](http://kubernetes.io/docs/user-guide/compute-resources/)
                  specified, the Kubernetes scheduler can make better decisions about
                  which nodes to place pods on.
                properties:
                  limits:
                    description: Limit defines the maximum amount of resources a container
                      can use before getting evicted.
                    properties:
                      cpu:
                        pattern: ^\d+m?$
                        type: string
                      memory:
                        pattern: ^\d+[KMG]i$
                        type: string
                    type: object
                  requests:
                    description: Request defines the amount of resources a container
                      is allocated on startup.
                    properties:
                      cpu:
                        pattern: ^\d+m?$
                        type: string
                      memory:
                        pattern: ^\d+[KMG]i$
                        type: string
                    type: object
                type: object
              restartPolicy:
                description: RestartPolicy describes how the container should be restarted.
                  Only one of the following restart policies may be specified. If
                  none of the following policies is specified, the default one is
                  Never. Read more about [Kubernetes handling pod and container failures](https://kubernetes.io/docs/concepts/workloads/controllers/job/#handling-pod-and-container-failures)
                enum:
                - OnFailure
                - Never
                type: string
              schedule:
                description: The [Cron](https://en.wikipedia.org/wiki/Cron) schedule
                  for running the Naisjob. If not specified, the Naisjob will be run
                  as a one-shot Job. The timezone for Naisjobs defaults to UTC.
                type: string
              secureLogs:
                description: Whether or not to enable a sidecar container for secure
                  logging.
                properties:
                  enabled:
                    description: Whether to enable a sidecar container for secure
                      logging. If enabled, a volume is mounted in the pods where secure
                      logs can be saved.
                    type: boolean
                required:
                - enabled
                type: object
              skipCaBundle:
                description: Whether to skip injection of NAV certificate authority
                  bundle or not. Defaults to false.
                type: boolean
              startup:
                description: Kubernetes uses startup probes to know when a container
                  application has started. If such a probe is configured, it disables
                  liveness and readiness checks until it succeeds, making sure those
                  probes don't interfere with the application startup. This can be
                  used to adopt liveness checks on slow starting containers, avoiding
                  them getting killed by Kubernetes before they are up and running.
                properties:
                  failureThreshold:
                    description: When a Pod starts, and the probe fails, Kubernetes
                      will try _failureThreshold_ times before giving up. Giving up
                      in case of a startup probe means restarting the Pod.
                    type: integer
                  initialDelay:
                    description: Number of seconds after the container has started
                      before startup probes are initiated.
                    type: integer
                  path:
                    description: HTTP endpoint path that signals 200 OK if the application
                      has started successfully.
                    type: string
                  periodSeconds:
                    description: How often (in seconds) to perform the probe.
                    type: integer
                  port:
                    description: Port for the startup probe.
                    type: integer
                  timeout:
                    description: Number of seconds after which the probe times out.
                    type: integer
                required:
                - path
                type: object
              successfulJobsHistoryLimit:
                description: Specify how many completed Jobs should be kept.
                format: int32
                type: integer
              terminationGracePeriodSeconds:
                description: The grace period is the duration in seconds after the
                  processes running in the pod are sent a termination signal and the
                  time when the processes are forcibly halted with a kill signal.
                  Set this value longer than the expected cleanup time for your process.
                  For most jobs, the default is more than enough. Defaults to 30 seconds.
                format: int64
                maximum: 180
                minimum: 0
                type: integer
              ttlSecondsAfterFinished:
                description: Specify the number of seconds to wait before removing
                  the Job after it has finished (either Completed or Failed). If the
                  field is unset, this Job won't be cleaned up by the TTL controller
                  after it finishes.
                format: int32
                type: integer
              vault:
                description: Provides secrets management, identity-based access, and
                  encrypting application data for auditing of secrets for applications,
                  systems, and users.
                properties:
                  enabled:
                    description: If set to true, fetch secrets from Vault and inject
                      into the pods.
                    type: boolean
                  paths:
                    description: "List of secret paths to be read from Vault and injected
                      into the pod's filesystem. Overriding the `paths` array is optional,
                      and will give you fine-grained control over which Vault paths
                      that will be mounted on the file system. \n By default, the
                      list will contain an entry with \n `kvPath: /kv/<environment>/<zone>/<application>/<namespace>`
                      `mountPath: /var/run/secrets/nais.io/vault` \n that will always
                      be attempted to be mounted."
                    items:
                      properties:
                        format:
                          description: Format of the secret that should be processed.
                          enum:
                          - flatten
                          - json
                          - yaml
                          - env
                          - properties
                          - ""
                          type: string
                        kvPath:
                          description: Path to Vault key/value store that should be
                            mounted into the file system.
                          type: string
                        mountPath:
                          description: File system path that the secret will be mounted
                            into.
                          type: string
                      required:
                      - kvPath
                      - mountPath
                      type: object
                    type: array
                  sidecar:
                    description: If enabled, the sidecar will automatically refresh
                      the token's Time-To-Live before it expires.
                    type: boolean
                type: object
              webproxy:
                description: Inject on-premises web proxy configuration into the job
                  container. Most Linux applications should auto-detect these settings
                  from the `$HTTP_PROXY`, `$HTTPS_PROXY` and `$NO_PROXY` environment
                  variables (and their lowercase counterparts). Java applications
                  can start the JVM using parameters from the `$JAVA_PROXY_OPTIONS`
                  environment variable.
                type: boolean
            required:
            - image
            type: object
          status:
            description: Status contains different NAIS status properties
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              correlationID:
                type: string
              deploymentRolloutStatus:
                type: string
              rolloutCompleteTime:
                format: int64
                type: integer
              synchronizationHash:
                type: string
              synchronizationState:
                type: string
              synchronizationTime:
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
