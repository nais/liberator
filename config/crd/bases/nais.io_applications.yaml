
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: applications.nais.io
spec:
  group: nais.io
  names:
    kind: Application
    listKind: ApplicationList
    plural: applications
    shortNames:
    - app
    singular: application
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .metadata.labels.team
      name: Team
      type: string
    - jsonPath: .status.synchronizationState
      name: State
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Application defines a NAIS application.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationSpec contains the NAIS manifest. Please keep this
              list sorted for clarity.
            properties:
              accessPolicy:
                description: By default, no traffic is allowed between applications
                  inside the cluster. Configure access policies to explicitly allow
                  communication between applications. This is also used for granting
                  inbound access in the context of Azure AD and TokenX clients.
                properties:
                  inbound:
                    description: Configures inbound access for your application.
                    properties:
                      rules:
                        description: List of NAIS applications that may access your
                          application. These settings apply both to Zero Trust network
                          connectivity and token validity for Azure AD and TokenX
                          tokens.
                        items:
                          properties:
                            application:
                              description: The application's name.
                              type: string
                            cluster:
                              description: The application's cluster. May be omitted
                                if it should be in the same cluster as your application.
                              type: string
                            namespace:
                              description: The application's namespace. May be omitted
                                if it should be in the same namespace as your application.
                              type: string
                            permissions:
                              description: Permissions contains a set of permissions
                                that are granted to the given application. Currently
                                only applicable for Azure AD clients.
                              properties:
                                roles:
                                  description: Roles is a set of custom permission
                                    roles that are granted to a given application.
                                  items:
                                    pattern: ^[a-z0-9-_./]+$
                                    type: string
                                  type: array
                                scopes:
                                  description: Scopes is a set of custom permission
                                    scopes that are granted to a given application.
                                  items:
                                    pattern: ^[a-z0-9-_./]+$
                                    type: string
                                  type: array
                              type: object
                          required:
                          - application
                          type: object
                        type: array
                    required:
                    - rules
                    type: object
                  outbound:
                    description: Configures outbound access for your application.
                    properties:
                      external:
                        description: List of external resources that your applications
                          should be able to reach.
                        items:
                          properties:
                            host:
                              description: The _host_ that your application should
                                be able to reach, i.e. without the protocol (e.g.
                                `https://`).
                              type: string
                            ports:
                              description: List of port rules for external communication.
                                Must be specified if using protocols other than HTTPS.
                              items:
                                properties:
                                  name:
                                    description: Human-readable identifier for this
                                      rule.
                                    type: string
                                  port:
                                    description: The port used for communication.
                                    format: int32
                                    type: integer
                                  protocol:
                                    description: The protocol used for communication.
                                    enum:
                                    - HTTP
                                    - HTTPS
                                    - GRPC
                                    - HTTP2
                                    - MONGO
                                    - TCP
                                    - TLS
                                    type: string
                                required:
                                - name
                                - port
                                - protocol
                                type: object
                              type: array
                          required:
                          - host
                          type: object
                        type: array
                      rules:
                        description: List of NAIS applications that your application
                          needs to access. These settings apply to Zero Trust network
                          connectivity.
                        items:
                          properties:
                            application:
                              description: The application's name.
                              type: string
                            cluster:
                              description: The application's cluster. May be omitted
                                if it should be in the same cluster as your application.
                              type: string
                            namespace:
                              description: The application's namespace. May be omitted
                                if it should be in the same namespace as your application.
                              type: string
                          required:
                          - application
                          type: object
                        type: array
                    type: object
                type: object
              azure:
                description: Provisions and configures Azure resources.
                properties:
                  application:
                    description: Configures an Azure AD client for this application.
                    properties:
                      allowAllUsers:
                        description: AllowAllUsers denotes whether or not all users
                          within the tenant should be allowed to access this AzureAdApplication.
                          If undefined will default to `true` when Spec.Claims.Groups
                          is undefined, and `false` if Spec,Claims.Groups is defined.
                        type: boolean
                      claims:
                        description: Claims defines additional configuration of the
                          emitted claims in tokens returned to the Azure AD application.
                        properties:
                          extra:
                            description: Extra is a list of additional claims to be
                              mapped from an associated claim-mapping policy. Currently,
                              the only supported values are `NAVident` and `azp_name`.
                            items:
                              enum:
                              - NAVident
                              - azp_name
                              type: string
                            type: array
                          groups:
                            description: Groups is a list of Azure AD group IDs to
                              be emitted in the 'Groups' claim. This also restricts
                              access to only contain users of the defined groups unless
                              overridden by Spec.AllowAllUsers.
                            items:
                              properties:
                                id:
                                  description: ID is the actual `object ID` associated
                                    with the given group in Azure AD.
                                  type: string
                              type: object
                            type: array
                        type: object
                      enabled:
                        description: Whether to enable provisioning of an Azure AD
                          application. If enabled, an Azure AD application will be
                          provisioned.
                        type: boolean
                      replyURLs:
                        description: ReplyURLs is a list of allowed redirect URLs
                          used when performing OpenID Connect flows for authenticating
                          end-users.
                        items:
                          type: string
                        type: array
                      singlePageApplication:
                        description: SinglePageApplication denotes whether or not
                          this Azure AD application should be registered as a single-page-application.
                        type: boolean
                      tenant:
                        description: "A Tenant represents an organization in Azure
                          AD. \n If unspecified, will default to `trygdeetaten.no`
                          for development clusters and `nav.no` for production clusters."
                        enum:
                        - nav.no
                        - trygdeetaten.no
                        type: string
                    required:
                    - enabled
                    type: object
                required:
                - application
                type: object
              cleanup:
                description: Configuration for automatic cleanup of failing pods
                properties:
                  enabled:
                    description: 'Enables automatic cleanup Default: `true`'
                    type: boolean
                  gracePeriod:
                    description: 'Default: `24h`'
                    pattern: ^[0-9]+h$
                    type: string
                  strategy:
                    description: "Strategy sets how a deployment might be handled.
                      Setting this to an empty list is equivalent to setting `enabled:
                      false`. Default: `[\"abort-rollout\", \"downscale\"]`. \n -
                      `abort-rollout`: if new pods in a deployment are failing, but
                      previous pods from the previous working    revision are still
                      running, Babylon can roll the deployment back to the working
                      revision,    aborting the rollout. \n - `downscale`: if all
                      pods in a deployment are failing, Babylon will set replicaset
                      to 0"
                    items:
                      enum:
                      - abort-rollout
                      - downscale
                      type: string
                    type: array
                required:
                - enabled
                type: object
              command:
                description: Override command when starting Docker image.
                items:
                  type: string
                type: array
              elastic:
                description: To get your own Elastic Search instance head over to
                  the IaC-repo to provision each instance. See [navikt/aiven-iac](https://github.com/navikt/aiven-iac)
                  repository.
                properties:
                  access:
                    description: Access level for elastic user
                    enum:
                    - read
                    - write
                    - readwrite
                    - admin
                    type: string
                  instance:
                    description: Provisions an Elasticsearch instance and configures
                      your application so it can access it. Use the `instance_name`
                      that you specified in the [navikt/aiven-iac](https://github.com/navikt/aiven-iac)
                      repository.
                    type: string
                required:
                - instance
                type: object
              env:
                description: Custom environment variables injected into your container.
                  Specify either `value` or `valueFrom`, but not both.
                items:
                  properties:
                    name:
                      description: Environment variable name. May only contain letters,
                        digits, and the underscore `_` character.
                      type: string
                    value:
                      description: Environment variable value. Numbers and boolean
                        values must be quoted. Required unless `valueFrom` is specified.
                      type: string
                    valueFrom:
                      description: Dynamically set environment variables based on
                        fields found in the Pod spec.
                      properties:
                        fieldRef:
                          properties:
                            fieldPath:
                              description: Field value from the `Pod` spec that should
                                be copied into the environment variable.
                              enum:
                              - ""
                              - metadata.name
                              - metadata.namespace
                              - metadata.labels
                              - metadata.annotations
                              - spec.nodeName
                              - spec.serviceAccountName
                              - status.hostIP
                              - status.podIP
                              type: string
                          required:
                          - fieldPath
                          type: object
                      required:
                      - fieldRef
                      type: object
                  required:
                  - name
                  type: object
                type: array
              envFrom:
                description: "EnvFrom exposes all variables in the ConfigMap or Secret
                  resources as environment variables. One of `configMap` or `secret`
                  is required. \n Environment variables will take the form `KEY=VALUE`,
                  where `key` is the ConfigMap or Secret key. You can specify as many
                  keys as you like in a single ConfigMap or Secret. \n The ConfigMap
                  and Secret resources must live in the same Kubernetes namespace
                  as the Application resource."
                items:
                  properties:
                    configmap:
                      description: Name of the `ConfigMap` where environment variables
                        are specified. Required unless `secret` is set.
                      type: string
                    secret:
                      description: Name of the `Secret` where environment variables
                        are specified. Required unless `configMap` is set.
                      type: string
                  type: object
                type: array
              filesFrom:
                description: "List of ConfigMap or Secret resources that will have
                  their contents mounted into the containers as files. Either `configMap`
                  or `secret` is required. \n Files will take the path `<mountPath>/<key>`,
                  where `key` is the ConfigMap or Secret key. You can specify as many
                  keys as you like in a single ConfigMap or Secret, and they will
                  all be mounted to the same directory. \n The ConfigMap and Secret
                  resources must live in the same Kubernetes namespace as the Application
                  resource."
                items:
                  properties:
                    configmap:
                      description: Name of the `ConfigMap` that contains files that
                        should be mounted into the container. Required unless `secret`
                        is set.
                      type: string
                    mountPath:
                      description: "Filesystem path inside the pod where files are
                        mounted. The directory will be created if it does not exist.
                        If the directory exists, any files in the directory will be
                        made unaccessible. \n Defaults to `/var/run/configmaps/<NAME>`
                        or `/var/run/secrets`, depending on which of them is specified."
                      type: string
                    secret:
                      description: Name of the `Secret` that contains files that should
                        be mounted into the container. Required unless `configMap`
                        is set. If mounting multiple secrets, `mountPath` *MUST* be
                        set to avoid collisions.
                      type: string
                  type: object
                type: array
              gcp:
                properties:
                  bigQueryDatasets:
                    description: Provision BigQuery datasets and give your application's
                      pod mountable secrets for connecting to each dataset. Datasets
                      are immutable and cannot be changed.
                    items:
                      properties:
                        cascadingDelete:
                          description: 'When set to true will delete the dataset,
                            when the application resource is deleted. NB: If no tables
                            exist in the bigquery dataset, it _will_ delete the dataset
                            even if this value is set/defaulted to `false`. Default
                            value is `false`.'
                          type: boolean
                        description:
                          description: Human-readable description of what this BigQuery
                            dataset contains, or is used for. Will be visible in the
                            GCP Console.
                          type: string
                        name:
                          description: Name of the BigQuery Dataset. The canonical
                            name of the dataset will be `<TEAM_PROJECT_ID>:<NAME>`.
                          pattern: ^[a-z0-9][a-z0-9_]+$
                          type: string
                        permission:
                          description: Permission level given to application.
                          enum:
                          - READ
                          - READWRITE
                          type: string
                      required:
                      - name
                      - permission
                      type: object
                    type: array
                  buckets:
                    description: Provision cloud storage buckets and connect them
                      to your application.
                    items:
                      properties:
                        cascadingDelete:
                          description: Allows deletion of bucket. Set to true if you
                            want to delete the bucket.
                          type: boolean
                        lifecycleCondition:
                          description: Conditions for the bucket to use when selecting
                            objects to delete in cleanup.
                          properties:
                            age:
                              description: Condition is satisfied when the object
                                reaches the specified age in days. These will be deleted.
                              type: integer
                            createdBefore:
                              description: Condition is satisfied when the object
                                is created before midnight on the specified date.
                                These will be deleted.
                              type: string
                            numNewerVersions:
                              description: Condition is satisfied when the object
                                has the specified number of newer versions. The older
                                versions will be deleted.
                              type: integer
                            withState:
                              description: Condition is satisfied when the object
                                has the specified state.
                              enum:
                              - ""
                              - LIVE
                              - ARCHIVED
                              - ANY
                              type: string
                          type: object
                        name:
                          description: The name of the bucket
                          type: string
                        retentionPeriodDays:
                          description: The number of days to hold objects in the bucket
                            before it is allowed to delete them.
                          maximum: 36500
                          minimum: 1
                          type: integer
                        uniformBucketLevelAccess:
                          description: "Allows you to uniformly control access to
                            your Cloud Storage resources. When you enable uniform
                            bucket-level access on a bucket, Access Control Lists
                            (ACLs) are disabled, and only bucket-level Identity and
                            Access Management (IAM) permissions grant access to that
                            bucket and the objects it contains. \n Uniform access
                            control can not be reversed after 90 days! This is controlled
                            by Google."
                          type: boolean
                      required:
                      - name
                      type: object
                    type: array
                  permissions:
                    description: List of _additional_ permissions that should be granted
                      to your application for accessing external GCP resources that
                      have not been provisioned through NAIS.
                    items:
                      properties:
                        resource:
                          description: IAM resource to bind the role to.
                          properties:
                            apiVersion:
                              description: Kubernetes _APIVersion_.
                              type: string
                            kind:
                              description: Kubernetes _Kind_.
                              type: string
                            name:
                              description: Kubernetes _Name_.
                              type: string
                          required:
                          - apiVersion
                          - kind
                          type: object
                        role:
                          description: Name of the GCP role to bind the resource to.
                          type: string
                      required:
                      - resource
                      - role
                      type: object
                    type: array
                  sqlInstances:
                    description: Provision database instances and connect them to
                      your application.
                    items:
                      properties:
                        autoBackupHour:
                          description: If specified, run automatic backups of the
                            SQL database at the given hour. Note that this will backup
                            the whole SQL instance, and not separate databases. Restores
                            are done using the Google Cloud Console.
                          maximum: 23
                          minimum: 0
                          type: integer
                        cascadingDelete:
                          description: Remove the entire Postgres server including
                            all data when the Kubernetes resource is deleted. *THIS
                            IS A DESTRUCTIVE OPERATION*! Set cascading delete only
                            when you want to remove data forever.
                          type: boolean
                        collation:
                          description: Sort order for `ORDER BY ...` clauses.
                          type: string
                        databases:
                          description: List of databases that should be created on
                            this Postgres server.
                          items:
                            properties:
                              envVarPrefix:
                                description: Prefix to add to environment variables
                                  made available for database connection.
                                type: string
                              name:
                                description: Database name.
                                type: string
                              users:
                                description: Add extra users for database access.
                                  These users need to be manually given access to
                                  database tables.
                                items:
                                  properties:
                                    name:
                                      description: User name.
                                      pattern: ^[_a-zA-Z][_a-zA-Z0-9]+$
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - name
                            type: object
                          type: array
                        diskAutoresize:
                          description: When set to true, GCP will automatically increase
                            storage by XXX for the database when disk usage is above
                            the high water mark.
                          type: boolean
                        diskSize:
                          description: How much hard drive space to allocate for the
                            SQL server, in gigabytes.
                          minimum: 10
                          type: integer
                        diskType:
                          description: Disk type to use for storage in the database.
                          enum:
                          - SSD
                          - HDD
                          type: string
                        highAvailability:
                          description: When set to true this will set up standby database
                            for failover.
                          type: boolean
                        insights:
                          description: Configures query insights which are now default
                            for new sql instances.
                          properties:
                            enabled:
                              description: True if Query Insights feature is enabled.
                              type: boolean
                            queryStringLength:
                              description: Maximum query length stored in bytes. Between
                                256 and 4500. Default to 1024.
                              maximum: 4500
                              minimum: 256
                              type: integer
                            recordApplicationTags:
                              description: True if Query Insights will record application
                                tags from query when enabled.
                              type: boolean
                            recordClientAddress:
                              description: True if Query Insights will record client
                                address when enabled.
                              type: boolean
                          type: object
                        maintenance:
                          description: Desired maintenance window for database updates.
                          properties:
                            day:
                              maximum: 7
                              minimum: 1
                              type: integer
                            hour:
                              maximum: 23
                              minimum: 0
                              type: integer
                          type: object
                        name:
                          description: The name of the instance, if omitted the application
                            name will be used.
                          type: string
                        pointInTimeRecovery:
                          description: Enables point-in-time recovery for sql instances
                            using write-ahead logs.
                          type: boolean
                        tier:
                          description: Server tier, i.e. how much CPU and memory allocated.
                            Available tiers can be retrieved on the command line by
                            running `gcloud sql tiers list`.
                          pattern: db-.+
                          type: string
                        type:
                          description: PostgreSQL version.
                          enum:
                          - POSTGRES_11
                          - POSTGRES_12
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                type: object
              idporten:
                description: Configures an ID-porten client for this application.
                  See [ID-porten](https://doc.nais.io/security/auth/idporten/) for
                  more details.
                properties:
                  accessTokenLifetime:
                    description: "AccessTokenLifetime is the lifetime in seconds for
                      any issued access token from ID-porten. \n If unspecified, defaults
                      to `3600` seconds (1 hour)."
                    maximum: 3600
                    minimum: 1
                    type: integer
                  clientURI:
                    description: ClientURI is the URL shown to the user at ID-porten
                      when displaying a 'back' button or on errors.
                    pattern: ^https:\/\/.+$
                    type: string
                  enabled:
                    description: Whether to enable provisioning of an ID-porten client.
                      If enabled, an ID-porten client be provisioned.
                    type: boolean
                  frontchannelLogoutPath:
                    description: FrontchannelLogoutPath is a valid path for your application
                      where ID-porten sends a request to whenever the user has initiated
                      a logout elsewhere as part of a single logout (front channel
                      logout) process.
                    pattern: ^\/.*$
                    type: string
                  frontchannelLogoutURI:
                    description: Prefer using `frontchannelLogoutPath`.
                    pattern: ^https:\/\/.+$
                    type: string
                  postLogoutRedirectURIs:
                    description: PostLogoutRedirectURIs are valid URIs that ID-porten
                      will allow redirecting the end-user to after a single logout
                      has been initiated and performed by the application.
                    items:
                      pattern: ^https:\/\/.+$
                      type: string
                    type: array
                  redirectPath:
                    description: RedirectPath is a valid path that ID-porten redirects
                      back to after a successful authorization request.
                    pattern: ^\/.*$
                    type: string
                  redirectURI:
                    description: Use `redirectPath` instead.
                    pattern: ^https:\/\/.+$
                    type: string
                  sessionLifetime:
                    description: "SessionLifetime is the maximum lifetime in seconds
                      for any given user's session in your application. The timeout
                      starts whenever the user is redirected from the `authorization_endpoint`
                      at ID-porten. \n If unspecified, defaults to `7200` seconds
                      (2 hours). Note: Attempting to refresh the user's `access_token`
                      beyond this timeout will yield an error."
                    maximum: 7200
                    minimum: 3600
                    type: integer
                  sidecar:
                    description: "Sidecar configures a sidecar that intercepts every
                      HTTP request, and performs the OIDC flow if necessary. All requests
                      to ingress + `/oauth2` will be processed only by the sidecar,
                      whereas all other requests will be proxied to the application.
                      \n If the client is authenticated with IDPorten, the `Authorization`
                      header will be set to `Bearer <JWT>`."
                    properties:
                      enabled:
                        description: Enable the sidecar.
                        type: boolean
                      level:
                        description: Default security level for all authentication
                          requests.
                        enum:
                        - Level3
                        - Level4
                        type: string
                      locale:
                        description: Default user interface locale for all authentication
                          requests.
                        enum:
                        - nb
                        - nn
                        - en
                        - se
                        type: string
                    required:
                    - enabled
                    type: object
                required:
                - enabled
                type: object
              image:
                description: Your application's Docker image location and tag.
                type: string
              influx:
                description: An InfluxDB via Aiven. A typical use case for influxdb
                  is to store metrics from your application and visualize them in
                  Grafana.
                properties:
                  instance:
                    description: 'Provisions an InfluxDB instance and configures your
                      application to access it. Use the prefix: `influx-` + `team`
                      that you specified in the [navikt/aiven-iac](https://github.com/navikt/aiven-iac)
                      repository.'
                    type: string
                required:
                - instance
                type: object
              ingresses:
                description: List of URLs that will route HTTPS traffic to the application.
                  All URLs must start with `https://`. Domain availability differs
                  according to which environment your application is running in.
                items:
                  pattern: ^https:\/\/.+$
                  type: string
                type: array
              kafka:
                description: Enable Aiven Kafka for your application.
                properties:
                  pool:
                    description: Configures your application to access an Aiven Kafka
                      cluster.
                    enum:
                    - nav-dev
                    - nav-prod
                    - nav-infrastructure
                    type: string
                required:
                - pool
                type: object
              leaderElection:
                description: If true, an HTTP endpoint will be available at `$ELECTOR_PATH`
                  that returns the current leader.
                type: boolean
              liveness:
                description: Many applications running for long periods of time eventually
                  transition to broken states, and cannot recover except by being
                  restarted. Kubernetes provides liveness probes to detect and remedy
                  such situations. Read more about this over at the [Kubernetes probes
                  documentation](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/).
                properties:
                  failureThreshold:
                    description: When a Pod starts, and the probe fails, Kubernetes
                      will try _failureThreshold_ times before giving up. Giving up
                      in case of a startup probe means restarting the Pod.
                    type: integer
                  initialDelay:
                    description: Number of seconds after the container has started
                      before startup probes are initiated.
                    type: integer
                  path:
                    description: HTTP endpoint path that signals 200 OK if the application
                      has started successfully.
                    type: string
                  periodSeconds:
                    description: How often (in seconds) to perform the probe.
                    type: integer
                  port:
                    description: Port for the startup probe.
                    type: integer
                  timeout:
                    description: Number of seconds after which the probe times out.
                    type: integer
                required:
                - path
                type: object
              logformat:
                description: Format of the logs from the container. Use this if the
                  container doesn't support JSON logging and the log is in a special
                  format that need to be parsed.
                enum:
                - ""
                - accesslog
                - accesslog_with_processing_time
                - accesslog_with_referer_useragent
                - capnslog
                - logrus
                - gokit
                - redis
                - glog
                - simple
                - influxdb
                - log15
                type: string
              logtransform:
                description: Extra filters for modifying log content. This can e.g.
                  be used for setting loglevel based on http status code.
                enum:
                - http_loglevel
                - dns_loglevel
                type: string
              maskinporten:
                description: Configures a Maskinporten client for this application.
                  See [Maskinporten](https://doc.nais.io/security/auth/maskinporten/)
                  for more details.
                properties:
                  enabled:
                    description: If enabled, provisions and configures a Maskinporten
                      client with consumed scopes and/or Exposed scopes with DigDir.
                    type: boolean
                  scopes:
                    description: Schema to configure Maskinporten clients with consumed
                      scopes and/or exposed scopes.
                    properties:
                      consumes:
                        description: This is the Schema for the consumes and exposes
                          API. `consumes` is a list of scopes that your client can
                          request access to.
                        items:
                          properties:
                            name:
                              description: The scope consumed by the application to
                                gain access to an external organization API. Ensure
                                that the NAV organization has been granted access
                                to the scope prior to requesting access.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      exposes:
                        description: '`exposes` is a list of scopes your application
                          want to expose to other organization where access to the
                          scope is based on organization number.'
                        items:
                          properties:
                            allowedIntegrations:
                              description: Whitelisting of integration's allowed.
                                Default is `maskinporten`
                              items:
                                type: string
                              minItems: 1
                              type: array
                            atMaxAge:
                              description: Max time in seconds for a issued access_token.
                                Default is `30` sec.
                              maximum: 680
                              minimum: 30
                              type: integer
                            consumers:
                              description: External consumers granted access to this
                                scope and able to request access_token.
                              items:
                                properties:
                                  name:
                                    description: This is a describing field intended
                                      for clarity not used for any other purpose.
                                    type: string
                                  orgno:
                                    description: The external business/organization
                                      number.
                                    pattern: ^\d{9}$
                                    type: string
                                required:
                                - orgno
                                type: object
                              type: array
                            enabled:
                              description: If Enabled the configured scope is available
                                to be used and consumed by organizations granted access.
                              type: boolean
                            name:
                              description: The actual subscope combined with `Product`.
                                Ensure that `<Product><Name>` matches `Pattern`.
                              pattern: ^([a-zæøå0-9]+\/?)+(\:[a-zæøå0-9]+)*[a-zæøå0-9]+(\.[a-zæøå0-9]+)*$
                              type: string
                            product:
                              description: The product-area your application belongs
                                to e.g. arbeid, helse ... This will be included in
                                the final scope `nav:<Product><Name>`.
                              pattern: ^[a-z0-9]+$
                              type: string
                          required:
                          - enabled
                          - name
                          - product
                          type: object
                        type: array
                    type: object
                required:
                - enabled
                type: object
              port:
                description: The port number which is exposed by the container and
                  should receive traffic.
                type: integer
              preStopHook:
                description: PreStopHook is called immediately before a container
                  is terminated due to an API request or management event such as
                  liveness/startup probe failure, preemption, resource contention,
                  etc. The handler is not called if the container crashes or exits
                  by itself. The reason for termination is passed to the handler.
                properties:
                  exec:
                    description: Command that should be run inside the main container
                      just before the pod is shut down by Kubernetes.
                    properties:
                      command:
                        description: "Command is the command line to execute inside
                          the container before the pod is shut down. The command is
                          not run inside a shell, so traditional shell instructions
                          (pipes, redirects, etc.) won't work. To use a shell, you
                          need to explicitly call out to that shell. \n If the exit
                          status is non-zero, the pod will still be shut down, and
                          marked as `Failed`."
                        items:
                          type: string
                        type: array
                    type: object
                  http:
                    description: HTTP GET request that is called just before the pod
                      is shut down by Kubernetes.
                    properties:
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        description: Port to access on the container. Defaults to
                          application port, as defined in `.spec.port`.
                        maximum: 65535
                        minimum: 1
                        type: integer
                    required:
                    - path
                    type: object
                type: object
              preStopHookPath:
                description: A HTTP GET will be issued to this endpoint at least once
                  before the pod is terminated. This feature is deprecated and will
                  be removed in the next major version (nais.io/v1).
                type: string
              prometheus:
                description: Prometheus is used to [scrape metrics from the pod](https://doc.nais.io/observability/metrics/).
                  Use this configuration to override the default values.
                properties:
                  enabled:
                    type: boolean
                  path:
                    type: string
                  port:
                    type: string
                type: object
              readiness:
                description: Sometimes, applications are temporarily unable to serve
                  traffic. For example, an application might need to load large data
                  or configuration files during startup, or depend on external services
                  after startup. In such cases, you don't want to kill the application,
                  but you don’t want to send it requests either. Kubernetes provides
                  readiness probes to detect and mitigate these situations. A pod
                  with containers reporting that they are not ready does not receive
                  traffic through Kubernetes Services. Read more about this over at
                  the [Kubernetes readiness documentation](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/).
                properties:
                  failureThreshold:
                    description: When a Pod starts, and the probe fails, Kubernetes
                      will try _failureThreshold_ times before giving up. Giving up
                      in case of a startup probe means restarting the Pod.
                    type: integer
                  initialDelay:
                    description: Number of seconds after the container has started
                      before startup probes are initiated.
                    type: integer
                  path:
                    description: HTTP endpoint path that signals 200 OK if the application
                      has started successfully.
                    type: string
                  periodSeconds:
                    description: How often (in seconds) to perform the probe.
                    type: integer
                  port:
                    description: Port for the startup probe.
                    type: integer
                  timeout:
                    description: Number of seconds after which the probe times out.
                    type: integer
                required:
                - path
                type: object
              replicas:
                description: The numbers of pods to run in parallel.
                properties:
                  cpuThresholdPercentage:
                    description: Amount of CPU usage before the autoscaler kicks in.
                    type: integer
                  max:
                    description: The pod autoscaler will increase replicas when required
                      up to the maximum.
                    type: integer
                  min:
                    description: The minimum amount of running replicas for a deployment.
                    type: integer
                type: object
              resources:
                description: When Containers have [resource requests](http://kubernetes.io/docs/user-guide/compute-resources/)
                  specified, the Kubernetes scheduler can make better decisions about
                  which nodes to place pods on.
                properties:
                  limits:
                    description: Limit defines the maximum amount of resources a container
                      can use before getting evicted.
                    properties:
                      cpu:
                        pattern: ^\d+m?$
                        type: string
                      memory:
                        pattern: ^\d+[KMG]i$
                        type: string
                    type: object
                  requests:
                    description: Request defines the amount of resources a container
                      is allocated on startup.
                    properties:
                      cpu:
                        pattern: ^\d+m?$
                        type: string
                      memory:
                        pattern: ^\d+[KMG]i$
                        type: string
                    type: object
                type: object
              secureLogs:
                description: Whether or not to enable a sidecar container for secure
                  logging.
                properties:
                  enabled:
                    description: Whether to enable a sidecar container for secure
                      logging. If enabled, a volume is mounted in the pods where secure
                      logs can be saved.
                    type: boolean
                required:
                - enabled
                type: object
              service:
                description: Specify which port and protocol is used to connect to
                  the application in the container. Defaults to HTTP on port 80.
                properties:
                  port:
                    description: Port for the default service. Default port is 80.
                    format: int32
                    type: integer
                  protocol:
                    description: Which protocol the backend service runs on. Default
                      is `http`.
                    enum:
                    - http
                    - redis
                    - tcp
                    - grpc
                    type: string
                required:
                - port
                type: object
              skipCaBundle:
                description: Whether to skip injection of NAV certificate authority
                  bundle or not. Defaults to false.
                type: boolean
              startup:
                description: Kubernetes uses startup probes to know when a container
                  application has started. If such a probe is configured, it disables
                  liveness and readiness checks until it succeeds, making sure those
                  probes don't interfere with the application startup. This can be
                  used to adopt liveness checks on slow starting containers, avoiding
                  them getting killed by Kubernetes before they are up and running.
                properties:
                  failureThreshold:
                    description: When a Pod starts, and the probe fails, Kubernetes
                      will try _failureThreshold_ times before giving up. Giving up
                      in case of a startup probe means restarting the Pod.
                    type: integer
                  initialDelay:
                    description: Number of seconds after the container has started
                      before startup probes are initiated.
                    type: integer
                  path:
                    description: HTTP endpoint path that signals 200 OK if the application
                      has started successfully.
                    type: string
                  periodSeconds:
                    description: How often (in seconds) to perform the probe.
                    type: integer
                  port:
                    description: Port for the startup probe.
                    type: integer
                  timeout:
                    description: Number of seconds after which the probe times out.
                    type: integer
                required:
                - path
                type: object
              strategy:
                description: Specifies the strategy used to replace old Pods by new
                  ones.
                properties:
                  type:
                    description: Specifies the strategy used to replace old Pods by
                      new ones. `RollingUpdate` is the default value.
                    enum:
                    - Recreate
                    - RollingUpdate
                    type: string
                required:
                - type
                type: object
              tokenx:
                description: Provisions and configures a TokenX client for your application.
                properties:
                  enabled:
                    description: If enabled, will provision and configure a TokenX
                      client and inject an accompanying secret.
                    type: boolean
                  mountSecretsAsFilesOnly:
                    description: If enabled, secrets for TokenX will be mounted as
                      files only, i.e. not as environment variables.
                    type: boolean
                required:
                - enabled
                type: object
              vault:
                description: Provides secrets management, identity-based access, and
                  encrypting application data for auditing of secrets for applications,
                  systems, and users.
                properties:
                  enabled:
                    description: If set to true, fetch secrets from Vault and inject
                      into the pods.
                    type: boolean
                  paths:
                    description: "List of secret paths to be read from Vault and injected
                      into the pod's filesystem. Overriding the `paths` array is optional,
                      and will give you fine-grained control over which Vault paths
                      that will be mounted on the file system. \n By default, the
                      list will contain an entry with \n `kvPath: /kv/<environment>/<zone>/<application>/<namespace>`
                      `mountPath: /var/run/secrets/nais.io/vault` \n that will always
                      be attempted to be mounted."
                    items:
                      properties:
                        format:
                          description: Format of the secret that should be processed.
                          enum:
                          - flatten
                          - json
                          - yaml
                          - env
                          - properties
                          - ""
                          type: string
                        kvPath:
                          description: Path to Vault key/value store that should be
                            mounted into the file system.
                          type: string
                        mountPath:
                          description: File system path that the secret will be mounted
                            into.
                          type: string
                      required:
                      - kvPath
                      - mountPath
                      type: object
                    type: array
                  sidecar:
                    description: If enabled, the sidecar will automatically refresh
                      the token's Time-To-Live before it expires.
                    type: boolean
                type: object
              webproxy:
                description: Inject on-premises web proxy configuration into the application
                  pod. Most Linux applications should auto-detect these settings from
                  the `$HTTP_PROXY`, `$HTTPS_PROXY` and `$NO_PROXY` environment variables
                  (and their lowercase counterparts). Java applications can start
                  the JVM using parameters from the `$JAVA_PROXY_OPTIONS` environment
                  variable.
                type: boolean
            required:
            - image
            type: object
          status:
            description: Status contains different NAIS status properties
            properties:
              correlationID:
                type: string
              deploymentRolloutStatus:
                type: string
              rolloutCompleteTime:
                format: int64
                type: integer
              synchronizationHash:
                type: string
              synchronizationState:
                type: string
              synchronizationTime:
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
