
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: requestauthentications.security.istio.io
spec:
  group: security.istio.io
  names:
    kind: RequestAuthentication
    listKind: RequestAuthenticationList
    plural: requestauthentications
    singular: requestauthentication
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the implementation of this definition.
            properties:
              jwt_rules:
                description: 'Define the list of JWTs that can be validated at the
                  selected workloads'' proxy. A valid token will be used to extract
                  the authenticated identity. Each rule will be activated only when
                  a token is presented at the location recorgnized by the rule. The
                  token will be validated based on the JWT rule config. If validation
                  fails, the request will be rejected. Note: if more than one token
                  is presented (at different locations), the output principal is nondeterministic.'
                items:
                  properties:
                    audiences:
                      description: "The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3).
                        that are allowed to access. A JWT containing any of these
                        audiences will be accepted. \n The service name will be accepted
                        if audiences is empty. \n Example: \n ```yaml audiences: -
                        bookstore_android.apps.example.com   bookstore_web.apps.example.com
                        ```"
                      items:
                        type: string
                      type: array
                    forward_original_token:
                      description: If set to true, the orginal token will be kept
                        for the ustream request. Default is false.
                      type: boolean
                    from_headers:
                      description: 'List of header locations from which JWT is expected.
                        For example, below is the location spec if JWT is expected
                        to be found in `x-jwt-assertion` header, and have "Bearer
                        " prefix: ```   fromHeaders:   - name: x-jwt-assertion     prefix:
                        "Bearer " ```'
                      items:
                        description: This message specifies a header location to extract
                          JWT token.
                        properties:
                          name:
                            description: The HTTP header name.
                            type: string
                          prefix:
                            description: 'The prefix that should be stripped before
                              decoding the token. For example, for "Authorization:
                              Bearer <token>", prefix="Bearer " with a space at the
                              end. If the header doesn''t have this exact prefix,
                              it is considerred invalid.'
                            type: string
                        type: object
                      type: array
                    from_params:
                      description: 'List of query parameters from which JWT is expected.
                        For example, if JWT is provided via query parameter `my_token`
                        (e.g /path?my_token=<JWT>), the config is: ```   fromParams:   -
                        "my_token" ```'
                      items:
                        type: string
                      type: array
                    issuer:
                      description: "Identifies the issuer that issued the JWT. See
                        [issuer](https://tools.ietf.org/html/rfc7519#section-4.1.1)
                        A JWT with different `iss` claim will be rejected. \n Example:
                        https://foobar.auth0.com Example: 1234567-compute@developer.gserviceaccount.com"
                      type: string
                    jwks:
                      description: "JSON Web Key Set of public keys to validate signature
                        of the JWT. See https://auth0.com/docs/jwks. \n Note: Only
                        one of jwks_uri and jwks should be used. jwks_uri will be
                        ignored if it does."
                      type: string
                    jwks_uri:
                      description: "URL of the provider's public key set to validate
                        signature of the JWT. See [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
                        \n Optional if the key set document can either (a) be retrieved
                        from [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html)
                        of the issuer or (b) inferred from the email domain of the
                        issuer (e.g. a Google service account). \n Example: `https://www.googleapis.com/oauth2/v1/certs`
                        \n Note: Only one of jwks_uri and jwks should be used. jwks_uri
                        will be ignored if it does."
                      type: string
                    output_payload_to_header:
                      description: This field specifies the header name to output
                        a successfully verified JWT payload to the backend. The forwarded
                        data is `base64_encoded(jwt_payload_in_JSON)`. If it is not
                        specified, the payload will not be emitted.
                      type: string
                  type: object
                type: array
              selector:
                description: The selector determines the workloads to apply the RequestAuthentication
                  on. If not set, the policy will be applied to all workloads in the
                  same namespace as the policy.
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which a policy should be applied. The scope of label
                      search is restricted to the configuration namespace in which
                      the resource is present.
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
